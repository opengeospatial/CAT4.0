openapi: 3.0.3
info:
  title: "Building Blocks specified in OGC API - Features - Part 1: Core"
  description: |-
    Common components used in the
    [OGC standard "OGC API - Records - Part 1: Core"](https://docs.opengeospatial.org/is/20-004/20-004.html).

    OGC API - Records - Part 1: Core 1.0 is an OGC Standard.
    Copyright (c) 2019 Open Geospatial Consortium.
    To obtain additional rights of use, visit https://www.ogc.org/about-ogc/policies.

    This document is also available on
    [OGC](https://schemas.opengis.net/ogcapi/records/part1/1.0/openapi/ogcapi-records-1.yaml).
  version: '1.0.0'
  contact:
    name: Panagiotis Vretanos
    email: pvretano@cubewerx.com
  license:
    name: OGC License
    url: 'https://www.ogc.org/about-ogc/policies'
components:
  parameters:
    bbox:
      name: bbox
      in: query
      required: false
      schema:
        oneOf:
          - type: array
            minItems: 4
            maxItems: 4
            items:
              type: number
          - type: array
            minItems: 6
            maxItems: 6
            items:
              type: number
      style: form
      explode: false
    catalogId:
      name: catalogId
      in: path
      required: true
      schema:
        type: string
    datetime:
      name: datetime
      in: query
      required: false
      schema:
        type: string
      style: form
      explode: false
    externalId:
      name: externalId
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
    language:
      name: language
      in: query
      schema:
        type: array
        items:
          type: string
          pattern: "^((?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?:([A-Za-z]{2,3}(-(?:[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?:[A-Za-z]{4}))?(-(?:[A-Za-z]{2}|[0-9]{3}))?(-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?:[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?:x(-[A-Za-z0-9]{1,8})+))?)|(?:x(-[A-Za-z0-9]{1,8})+))(?:;q=(?:1|1\\.0+|0|0\\.[0-9]+))?$"
          example: 'de;q=0.7'
      explode: false
      style: form
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
      explode: false
      style: form
    q:
      name: q
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
    recordId:
      name: recordId
      in: path
      required: true
      schema:
        type: string
    sortby:
      name: sortby
      in: query
      required: false
      schema:
        type: array
        minItems: 1
        items:
          type: string
          pattern: '[+|-]?[A-Za-z_].*'
      explode: false
      style: form
    type:
      name: type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
  schemas:
    common:
      collectionInfo:
        allOf:
          - $ref: "#/components/schemas/common/links"
          - type: object
            required:
              - id
              - links
              - itemType
            properties:
            id:
              type: string
            title:
              type: string
            description:
              type: string
            extent:
              $ref: "#/components/schemas/common/extent"
            itemType:
              type: string
              enum:
                - collection
                - record
            crs:
              type: array
              items:
                type: string
                default:
                  - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            defaultSortOrder:
              type: array
              items:
                type: string
      collections:
        allOf:
          - $ref: "#/components/schemas/common/links"
          - type: object
            required:
              - links
              - collections
            properties:
              collections:
                type: array
                items:
                  $ref: "#components/schemas/catalog"
      confClasses:
        type: object
        required:
          - conformsTo
        properties:
          conformsTo:
            type: array
            items:
              type: string
      exception:
        type: object
        required:
          - code
        properties:
          code:
            type: string
          description:
            type: string
      extent:
        type: object
        properties:
          spatial:
            type: object
            properties:
              bbox:
                type: array
                minItems: 1
                items:
                  type: array
                  minItems: 4
                  maxItems: 6
                  items:
                    type: number
                  example:
                    - -180
                    - -90
                    - 180
                    - 90
              crs:
                type: string
                enum:
                  - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
                default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          temporal:
            type: object
            properties:
              interval:
                type: array
                minItems: 1
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    type: string
                    format: date-time
                    nullable: true
                  example:
                    - '2011-11-11T12:22:11Z'
                    - null
              resolution:
                  type: string
              trs:
                type: string
                enum:
                  - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
                default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
      landingPage:
        allOf:
          - $ref: "#/components/schemas/common/links"
          - type: object
            required:
              - links
            properties:
              title:
                type: string
                example: Buildings in Bonn
              description:
                type: string
                example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
      linkBase:
        type: object
        properties:
          rel:
            type: string
            example: alternate
          type:
            type: string
            example: application/geo+json
          hreflang:
            type: string
            example: en
          title:
            type: string
            example: "Trierer Strasse 70, 53115 Bonn"
          length:
            type: integer
          created:
            type: string
            format: date-time
          updated:
            type: string
            format: date-time
      links:
        type: object
        properties:
          links:
            type: array
            items:
              $ref: "#/components/schemas/common/link"
          linkTemplates:
            type: array
            items:
              $ref: "#/components/schemas/common/linkTemplate"
      linkTemplate:
        allOf:
          - $ref: "#/components/schemas/common/linkBase"
          - type: object
            required: link-template
            properties:
              link-template:
                type: string
                example: https://example.org/data/buildings/{building-id}
              variables:
                type: object
              varBase:
                type: string
                format: url
      link:
        allOf:
          - $ref: "#/components/schemas/common/linkBase"
          - type: object
            required: href
            properties:
              href:
                type: string
                format: url
                example: https://example.org/data/buildings/123
    catalog:
      allOf:
        $ref: "#/components/schemas/common/collectionInfo"
        type: object
        required:
          - title
          - type
          - itemType
        properties:
          type:
            type: string
            enum:
              - catalog
          itemType:
            oneOf:
              - type: string
                enum:
                  - record
              - type: array
                items:
                  type: string
                  enum:
                    - record
                    - catalog
                    - collection
                    - other
          conformsTo:
            $ref: "#/components/schemas/confClasses"
          created:
            type: string
            format: date-time
          updated:
            type: string
            format: date-time
          keywords:
            type: array
            items:
              type: string
          language:
            $ref: "#/components/schemas/language"
          languages:
            type: array
            items:
              $ref: "#/components/schemas.language"
          themes:
            type: array
            minItems: 1
            items:
              $ref: "#/components/schemas/theme"
          contacts:
            type: array
            items:
              $ref: "#/components/schemas/contact"
          license:
            $ref: "#/components/schemas/license"
          rights:
            type: string
          additionalProperties: true
    contact:
      type: object
      anyOf:
        - required:
          - name
        - required:
          - organization
      properties:
        identifier:
          type: string
        name:
          type: string
        position:
          type: string
        organization:
          type: string
        logo:
          allOf:
            - $ref: "#/components/schemas/common/link"
            - type: object
              required:
                - rel
                - type
              properties:
                rel:
                  enum:
                    - icon
        phones:
          type: array
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                description: The value is the phone number itself.
                pattern: "^\\+[1-9]{1}[0-9]{3,14}$"
                example: "+14165550142"
              roles:
                $ref: "#/components/schemas/roles"
        emails:
          type: array
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                format: email
              roles:
                $ref: "#/components/schemas/roles"
        addresses:
          type: array
          items:
            type: object
            properties:
              deliveryPoint:
      
                type: array
                items:
                  type: string
              city:
                type: string
              administrativeArea:
                type: string
              postalCode:
                type: string
              country:
                type: string
              roles:
                $ref: "#/components/schemas/roles"
        links:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/common/link"
              - type: object
                required:
                  - type
        hoursOfService:
          type: string
          example: "Hours: Mo-Fr 10am-7pm Sa 10am-22pm Su 10am-21pm"
        contactInstructions:
          type: string
        roles:
          $ref: "#/components/schemas/roles"
    featureCollectionGeoJSON:
      allOf:
        - $ref: "#/components/schemas/common/links"
        - type: object
          required:
            - type
            - features
          properties:
            type:
              type: string
              enum:
                - FeatureCollection
            features:
              type: array
              items:
                $ref: "#/components/schemas/recordGeoJSON"
            timeStamp:
              type: string
              format: date-time
            numberMatched:
              type: integer
              minimum: 0
            numberReturned:
              type: integer
              minimum: 0
    geometrycollectionGeoJSON:
      type: object
      required:
        - type
        - geometries
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: "#/components/schemas/geometryGeoJSON"
    geometryGeoJSON:
      oneOf:
        - $ref: "#/components/schemas/pointGeoJSON"
        - $ref: "#/components/schemas/multipointGeoJSON"
        - $ref: "#/components/schemas/linestringGeoJSON"
        - $ref: "#/components/schemas/multilinestringGeoJSON"
        - $ref: "#/components/schemas/polygonGeoJSON"
        - $ref: "#/components/schemas/multipolygonGeoJSON"
        - $ref: "#/components/schemas/geometrycollectionGeoJSON"
    language:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          name:
            type: string
            minLength: 1
          alternate:
            type: string
          dir:
            type: string
            enum:
              - ltr
              - rtl
              - ttb
              - btt
            default: ltr
    license:
      type: string
    linestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
    multilinestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
    multipointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
    multipolygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
    pointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
    polygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
    recordGeoJSON:
      allOf:
        - $ref: "#/components/schemas/common/links"
        - type: object
          required:
            - id
            - type
            - time
            - geometry
            - properties
            - links
          properties:
            id:
              type: string
              format: uri
            conformsTo:
              $ref: "#/components/schemas/common/conformsTo"
            type:
              type: string
              enum:
                - Feature
            time:
              $ref: "#/components/schemas/time"
            geometry:
              oneOf:
                - enum:
                  - null
                - $ref: "#/components/schemas/geometryGeoJSON"
            properties:
              type: object
              required:
                - type
                - title
              properties:
                created:
                  type: string
                  format: date-time
                updated:
                  type: string
                  format: date-time
                type:
                  type: string
                  maxLength: 64
                title:
                  type: string
                description:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
                language:
                  $ref: "#/components/schemas/language"
                languages:
                  type: array
                  items:
                    $ref: "#/components/schemas/language"
                resourceLanguages:
                  type: array
                  items:
                    $ref: "#/components/schemas/language"
                externalIds:
                  type: array
                  items:
                    type: object
                    properties:
                      scheme:
                        type: string
                      value:
                        type: string
                    required:
                      - value
                themes:
                  type: array
                  minItems: 1
                  items:
                    $ref: "#/components/schemas/theme"
                formats:
                  type: array
                  items:
                    type: string
                contacts:
                  type: array
                  items:
                    $ref: "#/components/schemas/contact"
                license:
                  $ref: "#/components/schemas/license"
                rights:
                  type: string
    roles:
      type: array
      minItems: 1
      items:
        type: string
    theme:
      type: object
      required:
        - concepts
        - scheme
      properties:
        concepts:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              url:
                type: string
                format: uri
        scheme:
          type: string
    time:
      type: object
      nullable: true
      properties:
        date:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        timestamp:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
        interval:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2}$"
              - type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
              - type: string
                enum:
                  - ".."
        resolution:
          type: string
          example:
            - 'P1D'
  responses:
    Collections:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
    Collection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/catalog'
        text/html:
          schema:
            type: string
    ConformanceDeclaration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/common/confClasses'
          example:
            conformsTo:
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/crawlable-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/searchable-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/local-resources-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-core'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-collection'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-api'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/sorting'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/cql'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/json'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/html'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/autodiscovery'
        text/html:
          schema:
            type: string
    InvalidParameter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/common/exception'
        text/html:
          schema:
            type: string
    LandingPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/common/landingPage'
        text/html:
          schema:
            type: string
    NotAcceptable:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/common/exception"
        text/html:
          schema:
            type: string
    NotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/common/exception"
        text/html:
          schema:
            type: string
    Records:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureCollectionGeoJSON'
        text/html:
          schema:
            type: string
    Record:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/recordGeoJSON'
        text/html:
          schema:
            type: string
    ServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/common/exception'
        text/html:
          schema:
            type: string
    Sortables:
      content:
        application/json:
          schema:
            type: object
        text/html:
          schema:
            type: string

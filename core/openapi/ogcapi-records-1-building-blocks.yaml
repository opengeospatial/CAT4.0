openapi: 3.0.3
info:
  title: "Building Blocks specified in OGC API - Features - Part 1: Core"
  description: |-
    Common components used in the
    [OGC standard "OGC API - Records - Part 1: Core"](https://docs.opengeospatial.org/is/20-004/20-004.html).

    OGC API - Records - Part 1: Core 1.0 is an OGC Standard.
    Copyright (c) 2019 Open Geospatial Consortium.
    To obtain additional rights of use, visit https://www.ogc.org/about-ogc/policies.

    This document is also available on
    [OGC](https://schemas.opengis.net/ogcapi/records/part1/1.0/openapi/ogcapi-records-1.yaml).
  version: '1.0.0'
  contact:
    name: Panagiotis Vretanos
    email: pvretano@cubewerx.com
  license:
    name: OGC License
    url: 'https://www.ogc.org/about-ogc/policies'
components:
  parameters:
    bbox:
      name: bbox
      in: query
      required: false
      schema:
        oneOf:
          - type: array
            minItems: 4
            maxItems: 4
            items:
              type: number
          - type: array
            minItems: 6
            maxItems: 6
            items:
              type: number
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      required: false
      schema:
        type: string
      style: form
      explode: false
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
      explode: false
      style: form
    catalogId:
      name: catalogId
      in: path
      required: true
      schema:
        type: string
    externalId:
      name: externalId
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
    ids:
      name: ids
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
    language:
      name: language
      in: query
      schema:
        type: array
        items:
          type: string
          pattern: "^((?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?:([A-Za-z]{2,3}(-(?:[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?:[A-Za-z]{4}))?(-(?:[A-Za-z]{2}|[0-9]{3}))?(-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?:[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?:x(-[A-Za-z0-9]{1,8})+))?)|(?:x(-[A-Za-z0-9]{1,8})+))(?:;q=(?:1|1\\.0+|0|0\\.[0-9]+))?$"
          example: 'de;q=0.7'
      explode: false
      style: form
    q:
      name: q
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
    recordId:
      name: recordId
      in: path
      required: true
      schema:
        type: string
    sortby:
      name: sortby
      in: query
      required: false
      schema:
        type: array
        minItems: 1
        items:
          type: string
          pattern: '[+|-]?[A-Za-z_].*'
      explode: false
      style: form
    type:
      name: type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
      style: form
  schemas:
    catalogs:
      allOf:
        - $ref: '#/components/schemas/collections'
        - type: object
          properties:
            collections:
              type: array
              items:
                $ref: '#/components/schemas/catalog'
            linkTemplates:
              type: array
              items:
                $ref: '#/components/schemas/linkTemplate'
    catalog:
      allOf:
        - $ref: "#/components/schemas/collection"
        - type: object
          required:
            - title
            - type
            - itemType
          properties:
            type:
              type: string
              enum:
                - catalog
            itemType:
              oneOf:
                - type: string
                  enum:
                    - record
                - type: array
                  items:
                    type: string
                    enum:
                      - record
                      - catalog
                      - collection
                      - other
            conformsTo:
              $ref: "#/components/schemas/confClasses"
            created:
              type: string
              format: date-time
            updated:
              type: string
              format: date-time
            keywords:
              type: array
              items:
                type: string
            language:
              $ref: "#/components/schemas/language"
            languages:
              type: array
              items:
                $ref: "#/components/schemas/language"
            themes:
              type: array
              minItems: 1
              items:
                $ref: "#/components/schemas/theme"
            contacts:
              type: array
              items:
                $ref: "#/components/schemas/contact"
            license:
              $ref: "#/components/schemas/license"
            rights:
              type: string
            defaultSortOrder:
              type: array
              items:
                type: string
            linkTemplates:
              type: array
              items: 
                $ref: '#/components/schemas/linkTemplate'
    contact:
      type: object
      anyOf:
        - required:
          - name
        - required:
          - organization
      properties:
        identifier:
          type: string
        name:
          type: string
        position:
          type: string
        organization:
          type: string
        logo:
          allOf:
            - $ref: "#/components/schemas/link"
            - type: object
              required:
                - rel
                - type
              properties:
                rel:
                  enum:
                    - icon
        phones:
          type: array
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                description: The value is the phone number itself.
                pattern: "^\\+[1-9]{1}[0-9]{3,14}$"
                example: "+14165550142"
              roles:
                $ref: "#/components/schemas/roles"
        emails:
          type: array
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                format: email
              roles:
                $ref: "#/components/schemas/roles"
        addresses:
          type: array
          items:
            type: object
            properties:
              deliveryPoint:
      
                type: array
                items:
                  type: string
              city:
                type: string
              administrativeArea:
                type: string
              postalCode:
                type: string
              country:
                type: string
              roles:
                $ref: "#/components/schemas/roles"
        links:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/link"
              - type: object
                required:
                  - type
        hoursOfService:
          type: string
          example: "Hours: Mo-Fr 10am-7pm Sa 10am-22pm Su 10am-21pm"
        contactInstructions:
          type: string
        roles:
          $ref: "#/components/schemas/roles"
    featureCollectionGeoJSONRecords:
      allOf:
        - $ref: '#/components/schemas/featureCollectionGeoJSON'
        - type: object
          properties:
            features:
              type: array
              items:
                $ref: '#/components/schemas/recordGeoJSON'
            linkTemplates:
              type: array
              items:
                $ref: '#/components/schemas/linkTemplate'
    landingPageRecords:
      allOf:
        - $ref: '#/components/schemas/landingPage'
        - type: object
          properties:
            linksTemplates:
              type: array
              items:
                $ref: '#/components/schemas/linkTemplate'
    language:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        name:
          type: string
          minLength: 1
        alternate:
          type: string
        dir:
          type: string
          enum:
            - ltr
            - rtl
            - ttb
            - btt
          default: ltr
    license:
      type: string
    linkBase:
      type: object
      properties:
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: "Trierer Strasse 70, 53115 Bonn"
        length:
          type: integer
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    linkTemplate:
      allOf:
        - $ref: "#/components/schemas/linkBase"
        - type: object
          required: 
            - linkTemplate
          properties:
            uriTemplate:
              type: string
              example: https://example.org/data/buildings/{building-id}
            variables:
              type: object
            varBase:
              type: string
              format: uri
    recordGeoJSON:
      type: object
      required:
        - id
        - type
        - time
        - geometry
        - properties
        - links
      properties:
        id:
          type: string
        conformsTo:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - Feature
        time:
          $ref: "#/components/schemas/time"
        geometry:
          oneOf:
            - enum:
              - null
            - $ref: "#/components/schemas/geometryGeoJSON"
        properties:
          type: object
          required:
            - type
            - title
          properties:
            created:
              type: string
              format: date-time
            updated:
              type: string
              format: date-time
            type:
              type: string
              maxLength: 64
            title:
              type: string
            description:
              type: string
            keywords:
              type: array
              items:
                type: string
            language:
              $ref: "#/components/schemas/language"
            languages:
              type: array
              items:
                $ref: "#/components/schemas/language"
            resourceLanguages:
              type: array
              items:
                $ref: "#/components/schemas/language"
            externalIds:
              type: array
              items:
                type: object
                properties:
                  scheme:
                    type: string
                  value:
                    type: string
                required:
                  - value
            themes:
              type: array
              minItems: 1
              items:
                $ref: "#/components/schemas/theme"
            formats:
              type: array
              items:
                type: string
            contacts:
              type: array
              items:
                $ref: "#/components/schemas/contact"
            license:
              $ref: "#/components/schemas/license"
            rights:
              type: string
            links:
              type: array
              items:
                $ref: '#/components/schemas/link'
            linkTemplates:
              type: array
              items:
                $ref: '#/components/schemas/linkTemplate'
    roles:
      type: array
      minItems: 1
      items:
        type: string
    theme:
      type: object
      required:
        - concepts
        - scheme
      properties:
        concepts:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              url:
                type: string
                format: uri
        scheme:
          type: string
    time:
      type: object
      nullable: true
      properties:
        date:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        timestamp:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
        interval:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2}$"
              - type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
              - type: string
                enum:
                  - ".."
        resolution:
          type: string
          example: 'P1D'
    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
    collection:
      type: object
      required:
        - id
        - links
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
          example: address
        title:
          description: human readable title of the collection
          type: string
          example: address
        description:
          description: a description of the features in the collection
          type: string
          example: An address.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: http://data.example.com/buildings
              rel: item
            - href: http://example.com/concepts/buildings.html
              rel: describedby
              type: text/html
        extent:
          $ref: '#/components/schemas/extent'
        itemType:
          description:
            indicator about the type of the items in the collection (the
            default value is 'feature').
          type: string
          default: feature
        crs:
          description:
            the list of coordinate reference systems supported by the service
          type: array
          items:
            type: string
          default:
            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          example:
            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
            - 'http://www.opengis.net/def/crs/EPSG/0/4326'
    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
    exception:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    extent:
      type: object
      properties:
        spatial:
          type: object
          properties:
            bbox:
              type: array
              minItems: 1
              items:
                type: array
                minItems: 4
                maxItems: 6
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              type: string
              enum:
                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
        temporal:
          type: object
          properties:
            interval:
              type: array
              minItems: 1
              items:
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                  - '2011-11-11T12:22:11Z'
                  - null
            resolution:
                type: string
            trs:
              type: string
              enum:
                - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
              default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
    featureCollectionGeoJSON:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/recordGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          type: string
          format: date-time
        numberMatched:
          type: integer
          minimum: 0
        numberReturned:
          type: integer
          minimum: 0
    geometrycollectionGeoJSON:
      type: object
      required:
        - type
        - geometries
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: "#/components/schemas/geometryGeoJSON"
    geometryGeoJSON:
      oneOf:
        - $ref: "#/components/schemas/pointGeoJSON"
        - $ref: "#/components/schemas/multipointGeoJSON"
        - $ref: "#/components/schemas/linestringGeoJSON"
        - $ref: "#/components/schemas/multilinestringGeoJSON"
        - $ref: "#/components/schemas/polygonGeoJSON"
        - $ref: "#/components/schemas/multipolygonGeoJSON"
        - $ref: "#/components/schemas/geometrycollectionGeoJSON"
    linestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
        description:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      allOf:
        - $ref: "#/components/schemas/linkBase"
        - type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              example: https://example.org/data/buildings/123
    multilinestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
    multipointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
    multipolygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
    pointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
    polygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
  responses:
    LandingPage:
      description:
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        the Conformance declaration (path `/conformance`,
        link relation `conformance`), and the Feature
        Collections (path `/collections`, link relation
        `data`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
    ConformanceDeclaration:
      description:
        The URIs of all conformance classes supported by the server. 
        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance classes
        it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          example:
            conformsTo:
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/crawlable-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/searchable-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/local-resources-catalog'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-core'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-collection'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-api'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/sorting'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/cql'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/json'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/html'
              - 'http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/autodiscovery'
        text/html:
          schema:
            type: string
    Catalogs:
      description:
        Information about the list of catalogs offered by this service.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/catalogs'
        text/html:
          schema:
            type: string
    Catalog:
      description: |-
        Information about the record collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the +
          catalog;
        * A list of coordinate reference systems (CRS) in which geometries +
          may be returned by the server. The first CRS is the default +
          coordinate reference system (the default is always WGS 84 with +
          axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of +
          the spatial and temporal extent of the collection - typically +
          derived from the data;
        * An optional indicator about the type of the items in the collection +
          (the default value, if the indicator is not provided, is 'record').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/catalog'
        text/html:
          schema:
            type: string
    Sortables:
      description:
        A list of properties that may be specified for sorting the response.
      content:
        application/json:
          schema:
            type: object
        text/html:
          schema:
            type: string
    Records:
      description:
        The response is a document consisting of records in the catalog.
        The records included in the response are determined by the server
        based on the query parameters of the request. To support access to
        larger catalogs without overloading the client, the API supports
        paged access with links to the next page, if more features are selected
        that the page size.  The `limit` parameter may be used to control the
        subset of the selected features that should be returned in the
        response, the page size. Each page may include information about the
        number of selected and returned records (`numberMatched` and
        `numberReturned`) as well as links to support paging (link relation
        `next`).
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureCollectionGeoJSON'
        text/html:
          schema:
            type: string
    Record:
      description:
        The response document consists of a specified record, with
        identifier `recordId` from a catalog with identifier `catalogId`.
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/recordGeoJSON'
        text/html:
          schema:
            type: string
    InvalidParameter:
      description:
        A query parameter has an invalid value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
    NotAcceptable:
      description:
        Content negotiation failed. For example, the `Accept` header submitted
        in the request did not support any of the media types supported by the
        server for the requested resource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    NotFound:
      description: 
        The requested resource does not exist on the server. For example, a
        path parameter had an incorrect value.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    ServerError:
      description:
        A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
